build {
	core init timer lib/ld
	noux-pkg/go_app
}

create_boot_directory

install_config {
	<config verbose="yes" ld_verbose="yes">
		<parent-provides>
			<service name="ROM"/>
			<service name="LOG"/>
			<service name="RM"/>
			<service name="CPU"/>
			<service name="PD"/>
			<service name="IRQ"/>
			<service name="IO_MEM"/>
			<service name="IO_PORT"/>
		</parent-provides>
		<default-route>
			<any-service> <any-child/> <parent/> </any-service>
		</default-route>
		<default caps="150"/>
                <start name="timer">
                        <resource name="RAM" quantum="2M"/>
                        <provides><service name="Timer"/></provides>
                </start>
		<start name="test-go" caps="250">
			<resource name="RAM" quantum="12M"/>
			<config verbose="yes" ld_verbose="yes" >
				<vfs> <dir name="dev"> <log/> </dir> </vfs>
                                <libc stdout="/dev/log" stderr="/dev/log"/>
			</config>
		</start>
	</config>
}

build_boot_image {
	core init timer ld.lib.so libc.lib.so libm.lib.so posix.lib.so stdcxx.lib.so
	vfs.lib.so test-go
}

append qemu_args " -m 80M -nographic -smp 1"

run_genode_until "--- parent done ---.*\n" 20
run_genode_until "child.*exited.*\n" 5 [output_spawn_id]
